/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vocode from "../../api";
import * as core from "../../core";

export const AccountConnectionParamsRequest: core.serialization.Schema<
    serializers.AccountConnectionParamsRequest.Raw,
    Vocode.AccountConnectionParamsRequest
> = core.serialization
    .union("type", {
        account_connection_twilio: core.serialization.lazyObject(
            async () => (await import("..")).TwilioAccountConnectionParams
        ),
        account_connection_openai: core.serialization.lazyObject(
            async () => (await import("..")).OpenAiAccountConnectionParams
        ),
    })
    .transform<Vocode.AccountConnectionParamsRequest>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace AccountConnectionParamsRequest {
    type Raw =
        | AccountConnectionParamsRequest.AccountConnectionTwilio
        | AccountConnectionParamsRequest.AccountConnectionOpenai;

    interface AccountConnectionTwilio extends serializers.TwilioAccountConnectionParams.Raw {
        type: "account_connection_twilio";
    }

    interface AccountConnectionOpenai extends serializers.OpenAiAccountConnectionParams.Raw {
        type: "account_connection_openai";
    }
}
