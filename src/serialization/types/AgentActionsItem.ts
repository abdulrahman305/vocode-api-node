/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vocode from "../../api";
import * as core from "../../core";

export const AgentActionsItem: core.serialization.Schema<serializers.AgentActionsItem.Raw, Vocode.AgentActionsItem> =
    core.serialization
        .union("type", {
            action_transfer_call: core.serialization.lazyObject(async () => (await import("..")).TransferCallAction),
            action_end_conversation: core.serialization.lazyObject(
                async () => (await import("..")).EndConversationAction
            ),
            action_dtmf: core.serialization.lazyObject(async () => (await import("..")).DtmfAction),
            action_add_to_conference: core.serialization.lazyObject(
                async () => (await import("..")).AddToConferenceAction
            ),
            action_set_hold: core.serialization.lazyObject(async () => (await import("..")).SetHoldAction),
        })
        .transform<Vocode.AgentActionsItem>({
            transform: (value) => value,
            untransform: (value) => value,
        });

export declare namespace AgentActionsItem {
    type Raw =
        | AgentActionsItem.ActionTransferCall
        | AgentActionsItem.ActionEndConversation
        | AgentActionsItem.ActionDtmf
        | AgentActionsItem.ActionAddToConference
        | AgentActionsItem.ActionSetHold;

    interface ActionTransferCall extends serializers.TransferCallAction.Raw {
        type: "action_transfer_call";
    }

    interface ActionEndConversation extends serializers.EndConversationAction.Raw {
        type: "action_end_conversation";
    }

    interface ActionDtmf extends serializers.DtmfAction.Raw {
        type: "action_dtmf";
    }

    interface ActionAddToConference extends serializers.AddToConferenceAction.Raw {
        type: "action_add_to_conference";
    }

    interface ActionSetHold extends serializers.SetHoldAction.Raw {
        type: "action_set_hold";
    }
}
