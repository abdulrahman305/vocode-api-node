/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vocode from "../../api/index";
import * as core from "../../core";
import { AgentParamsPrompt } from "./AgentParamsPrompt";
import { Language } from "./Language";
import { AgentParamsActionsItem } from "./AgentParamsActionsItem";
import { AgentParamsVoice } from "./AgentParamsVoice";
import { AgentParamsWebhook } from "./AgentParamsWebhook";
import { AgentParamsVectorDatabase } from "./AgentParamsVectorDatabase";
import { InterruptSensitivity } from "./InterruptSensitivity";
import { AgentParamsEndpointingSensitivity } from "./AgentParamsEndpointingSensitivity";
import { AgentParamsIvrNavigationMode } from "./AgentParamsIvrNavigationMode";
import { AgentParamsOpenaiAccountConnection } from "./AgentParamsOpenaiAccountConnection";
import { InternalLlmFallback } from "./InternalLlmFallback";
import { AgentParamsDeepgramKeywordsValue } from "./AgentParamsDeepgramKeywordsValue";

export const AgentParams: core.serialization.ObjectSchema<serializers.AgentParams.Raw, Vocode.AgentParams> =
    core.serialization.object({
        name: core.serialization.string().optional(),
        prompt: AgentParamsPrompt,
        language: Language.optional(),
        actions: core.serialization.list(AgentParamsActionsItem).optional(),
        voice: AgentParamsVoice,
        initialMessage: core.serialization.property("initial_message", core.serialization.string().optional()),
        webhook: AgentParamsWebhook.optional(),
        vectorDatabase: core.serialization.property("vector_database", AgentParamsVectorDatabase.optional()),
        interruptSensitivity: core.serialization.property("interrupt_sensitivity", InterruptSensitivity.optional()),
        contextEndpoint: core.serialization.property("context_endpoint", core.serialization.string().optional()),
        noiseSuppression: core.serialization.property("noise_suppression", core.serialization.boolean().optional()),
        endpointingSensitivity: core.serialization.property(
            "endpointing_sensitivity",
            AgentParamsEndpointingSensitivity.optional()
        ),
        ivrNavigationMode: core.serialization.property("ivr_navigation_mode", AgentParamsIvrNavigationMode.optional()),
        conversationSpeed: core.serialization.property("conversation_speed", core.serialization.number().optional()),
        initialMessageDelay: core.serialization.property(
            "initial_message_delay",
            core.serialization.number().optional()
        ),
        openaiModelNameOverride: core.serialization.property(
            "openai_model_name_override",
            core.serialization.string().optional()
        ),
        askIfHumanPresentOnIdle: core.serialization.property(
            "ask_if_human_present_on_idle",
            core.serialization.boolean().optional()
        ),
        openaiAccountConnection: core.serialization.property(
            "openai_account_connection",
            AgentParamsOpenaiAccountConnection.optional()
        ),
        runDoNotCallDetection: core.serialization.property(
            "run_do_not_call_detection",
            core.serialization.boolean().optional()
        ),
        llmFallback: core.serialization.property("llm_fallback", InternalLlmFallback.optional()),
        deepgramKeywords: core.serialization.property(
            "deepgram_keywords",
            core.serialization
                .record(core.serialization.string(), AgentParamsDeepgramKeywordsValue.optional())
                .optional()
        ),
        llmTemperature: core.serialization.property("llm_temperature", core.serialization.number().optional()),
    });

export declare namespace AgentParams {
    interface Raw {
        name?: string | null;
        prompt: AgentParamsPrompt.Raw;
        language?: Language.Raw | null;
        actions?: AgentParamsActionsItem.Raw[] | null;
        voice: AgentParamsVoice.Raw;
        initial_message?: string | null;
        webhook?: AgentParamsWebhook.Raw | null;
        vector_database?: AgentParamsVectorDatabase.Raw | null;
        interrupt_sensitivity?: InterruptSensitivity.Raw | null;
        context_endpoint?: string | null;
        noise_suppression?: boolean | null;
        endpointing_sensitivity?: AgentParamsEndpointingSensitivity.Raw | null;
        ivr_navigation_mode?: AgentParamsIvrNavigationMode.Raw | null;
        conversation_speed?: number | null;
        initial_message_delay?: number | null;
        openai_model_name_override?: string | null;
        ask_if_human_present_on_idle?: boolean | null;
        openai_account_connection?: AgentParamsOpenaiAccountConnection.Raw | null;
        run_do_not_call_detection?: boolean | null;
        llm_fallback?: InternalLlmFallback.Raw | null;
        deepgram_keywords?: Record<string, AgentParamsDeepgramKeywordsValue.Raw | null | undefined> | null;
        llm_temperature?: number | null;
    }
}
