/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vocode from "../../api";
import * as core from "../../core";

export const CollectField: core.serialization.ObjectSchema<serializers.CollectField.Raw, Vocode.CollectField> =
    core.serialization.object({
        fieldType: core.serialization.property(
            "field_type",
            core.serialization.lazy(async () => (await import("..")).CollectFieldFieldType)
        ),
        label: core.serialization.string(),
        name: core.serialization.string(),
        description: core.serialization.string().optional(),
    });

export declare namespace CollectField {
    interface Raw {
        field_type: serializers.CollectFieldFieldType.Raw;
        label: string;
        name: string;
        description?: string | null;
    }
}
