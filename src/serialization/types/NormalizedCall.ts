/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vocode from "../../api/index";
import * as core from "../../core";
import { CallStatus } from "./CallStatus";
import { NormalizedCallHumanDetectionResult } from "./NormalizedCallHumanDetectionResult";
import { NormalizedCallStage } from "./NormalizedCallStage";
import { NormalizedCallStageOutcome } from "./NormalizedCallStageOutcome";
import { NormalizedCallTelephonyMetadata } from "./NormalizedCallTelephonyMetadata";
import { NormalizedCallTelephonyProvider } from "./NormalizedCallTelephonyProvider";
import { NormalizedCallOnNoHumanAnswer } from "./NormalizedCallOnNoHumanAnswer";
import { NormalizedCallTelephonyAccountConnection } from "./NormalizedCallTelephonyAccountConnection";

export const NormalizedCall: core.serialization.ObjectSchema<serializers.NormalizedCall.Raw, Vocode.NormalizedCall> =
    core.serialization.object({
        id: core.serialization.string(),
        userId: core.serialization.property("user_id", core.serialization.string()),
        status: CallStatus.optional(),
        errorMessage: core.serialization.property("error_message", core.serialization.string().optional()),
        recordingAvailable: core.serialization.property("recording_available", core.serialization.boolean().optional()),
        transcript: core.serialization.string().optional(),
        humanDetectionResult: core.serialization.property(
            "human_detection_result",
            NormalizedCallHumanDetectionResult.optional()
        ),
        doNotCallResult: core.serialization.property("do_not_call_result", core.serialization.boolean().optional()),
        telephonyId: core.serialization.property("telephony_id", core.serialization.string().optional()),
        stage: NormalizedCallStage.optional(),
        stageOutcome: core.serialization.property("stage_outcome", NormalizedCallStageOutcome.optional()),
        telephonyMetadata: core.serialization.property(
            "telephony_metadata",
            NormalizedCallTelephonyMetadata.optional()
        ),
        startTime: core.serialization.property("start_time", core.serialization.number().optional()),
        endTime: core.serialization.property("end_time", core.serialization.number().optional()),
        toNumber: core.serialization.property("to_number", core.serialization.string()),
        fromNumber: core.serialization.property("from_number", core.serialization.string()),
        agent: core.serialization.string(),
        telephonyProvider: core.serialization.property("telephony_provider", NormalizedCallTelephonyProvider),
        agentPhoneNumber: core.serialization.property("agent_phone_number", core.serialization.string()),
        hipaaCompliant: core.serialization.property("hipaa_compliant", core.serialization.boolean().optional()),
        onNoHumanAnswer: core.serialization.property("on_no_human_answer", NormalizedCallOnNoHumanAnswer.optional()),
        context: core.serialization
            .record(core.serialization.string(), core.serialization.string().optional())
            .optional(),
        runDoNotCallDetection: core.serialization.property(
            "run_do_not_call_detection",
            core.serialization.boolean().optional()
        ),
        telephonyAccountConnection: core.serialization.property(
            "telephony_account_connection",
            NormalizedCallTelephonyAccountConnection.optional()
        ),
        telephonyParams: core.serialization.property(
            "telephony_params",
            core.serialization.record(core.serialization.string(), core.serialization.string().optional()).optional()
        ),
    });

export declare namespace NormalizedCall {
    interface Raw {
        id: string;
        user_id: string;
        status?: CallStatus.Raw | null;
        error_message?: string | null;
        recording_available?: boolean | null;
        transcript?: string | null;
        human_detection_result?: NormalizedCallHumanDetectionResult.Raw | null;
        do_not_call_result?: boolean | null;
        telephony_id?: string | null;
        stage?: NormalizedCallStage.Raw | null;
        stage_outcome?: NormalizedCallStageOutcome.Raw | null;
        telephony_metadata?: NormalizedCallTelephonyMetadata.Raw | null;
        start_time?: number | null;
        end_time?: number | null;
        to_number: string;
        from_number: string;
        agent: string;
        telephony_provider: NormalizedCallTelephonyProvider.Raw;
        agent_phone_number: string;
        hipaa_compliant?: boolean | null;
        on_no_human_answer?: NormalizedCallOnNoHumanAnswer.Raw | null;
        context?: Record<string, string | null | undefined> | null;
        run_do_not_call_detection?: boolean | null;
        telephony_account_connection?: NormalizedCallTelephonyAccountConnection.Raw | null;
        telephony_params?: Record<string, string | null | undefined> | null;
    }
}
