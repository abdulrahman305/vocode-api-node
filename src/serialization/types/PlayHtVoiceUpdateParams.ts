/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vocode from "../../api";
import * as core from "../../core";

export const PlayHtVoiceUpdateParams: core.serialization.ObjectSchema<
    serializers.PlayHtVoiceUpdateParams.Raw,
    Vocode.PlayHtVoiceUpdateParams
> = core.serialization.object({
    voiceId: core.serialization.property(
        "voice_id",
        core.serialization.lazy(async () => (await import("..")).PlayHtVoiceUpdateParamsVoiceId).optional()
    ),
    apiUserId: core.serialization.property(
        "api_user_id",
        core.serialization.lazy(async () => (await import("..")).PlayHtVoiceUpdateParamsApiUserId).optional()
    ),
    apiKey: core.serialization.property(
        "api_key",
        core.serialization.lazy(async () => (await import("..")).PlayHtVoiceUpdateParamsApiKey).optional()
    ),
    version: core.serialization.lazy(async () => (await import("..")).PlayHtVoiceUpdateParamsVersion).optional(),
    speed: core.serialization.lazy(async () => (await import("..")).PlayHtVoiceUpdateParamsSpeed).optional(),
    quality: core.serialization.lazy(async () => (await import("..")).PlayHtVoiceUpdateParamsQuality).optional(),
    temperature: core.serialization
        .lazy(async () => (await import("..")).PlayHtVoiceUpdateParamsTemperature)
        .optional(),
    topP: core.serialization.property(
        "top_p",
        core.serialization.lazy(async () => (await import("..")).PlayHtVoiceUpdateParamsTopP).optional()
    ),
    textGuidance: core.serialization.property(
        "text_guidance",
        core.serialization.lazy(async () => (await import("..")).PlayHtVoiceUpdateParamsTextGuidance).optional()
    ),
    voiceGuidance: core.serialization.property(
        "voice_guidance",
        core.serialization.lazy(async () => (await import("..")).PlayHtVoiceUpdateParamsVoiceGuidance).optional()
    ),
    experimentalRemoveSilence: core.serialization.property(
        "experimental_remove_silence",
        core.serialization
            .lazy(async () => (await import("..")).PlayHtVoiceUpdateParamsExperimentalRemoveSilence)
            .optional()
    ),
});

export declare namespace PlayHtVoiceUpdateParams {
    interface Raw {
        voice_id?: serializers.PlayHtVoiceUpdateParamsVoiceId.Raw | null;
        api_user_id?: serializers.PlayHtVoiceUpdateParamsApiUserId.Raw | null;
        api_key?: serializers.PlayHtVoiceUpdateParamsApiKey.Raw | null;
        version?: serializers.PlayHtVoiceUpdateParamsVersion.Raw | null;
        speed?: serializers.PlayHtVoiceUpdateParamsSpeed.Raw | null;
        quality?: serializers.PlayHtVoiceUpdateParamsQuality.Raw | null;
        temperature?: serializers.PlayHtVoiceUpdateParamsTemperature.Raw | null;
        top_p?: serializers.PlayHtVoiceUpdateParamsTopP.Raw | null;
        text_guidance?: serializers.PlayHtVoiceUpdateParamsTextGuidance.Raw | null;
        voice_guidance?: serializers.PlayHtVoiceUpdateParamsVoiceGuidance.Raw | null;
        experimental_remove_silence?: serializers.PlayHtVoiceUpdateParamsExperimentalRemoveSilence.Raw | null;
    }
}
