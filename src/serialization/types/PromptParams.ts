/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vocode from "../../api/index";
import * as core from "../../core";
import { CollectField } from "./CollectField";
import { PromptParamsPromptTemplate } from "./PromptParamsPromptTemplate";

export const PromptParams: core.serialization.ObjectSchema<serializers.PromptParams.Raw, Vocode.PromptParams> =
    core.serialization.object({
        content: core.serialization.string().optional(),
        collectFields: core.serialization.property("collect_fields", core.serialization.list(CollectField).optional()),
        contextEndpoint: core.serialization.property("context_endpoint", core.serialization.string().optional()),
        promptTemplate: core.serialization.property("prompt_template", PromptParamsPromptTemplate.optional()),
    });

export declare namespace PromptParams {
    interface Raw {
        content?: string | null;
        collect_fields?: CollectField.Raw[] | null;
        context_endpoint?: string | null;
        prompt_template?: PromptParamsPromptTemplate.Raw | null;
    }
}
