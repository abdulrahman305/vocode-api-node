/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vocode from "../../api/index";
import * as core from "../../core";
import { RimeVoiceUpdateParamsSpeaker } from "./RimeVoiceUpdateParamsSpeaker";
import { RimeVoiceUpdateParamsSpeedAlpha } from "./RimeVoiceUpdateParamsSpeedAlpha";
import { RimeVoiceUpdateParamsModelId } from "./RimeVoiceUpdateParamsModelId";

export const RimeVoiceUpdateParams: core.serialization.ObjectSchema<
    serializers.RimeVoiceUpdateParams.Raw,
    Vocode.RimeVoiceUpdateParams
> = core.serialization.object({
    type: core.serialization.stringLiteral("voice_rime"),
    speaker: RimeVoiceUpdateParamsSpeaker.optional(),
    speedAlpha: core.serialization.property("speed_alpha", RimeVoiceUpdateParamsSpeedAlpha.optional()),
    modelId: core.serialization.property("model_id", RimeVoiceUpdateParamsModelId.optional()),
});

export declare namespace RimeVoiceUpdateParams {
    interface Raw {
        type: "voice_rime";
        speaker?: RimeVoiceUpdateParamsSpeaker.Raw | null;
        speed_alpha?: RimeVoiceUpdateParamsSpeedAlpha.Raw | null;
        model_id?: RimeVoiceUpdateParamsModelId.Raw | null;
    }
}
