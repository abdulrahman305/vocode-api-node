/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Vocode from "../../api";
import * as core from "../../core";

export const Usage: core.serialization.ObjectSchema<serializers.Usage.Raw, Vocode.Usage> = core.serialization.object({
    userId: core.serialization.property("user_id", core.serialization.string()),
    planType: core.serialization.property(
        "plan_type",
        core.serialization.lazy(async () => (await import("..")).PlanType)
    ),
    monthlyUsageMinutes: core.serialization.property("monthly_usage_minutes", core.serialization.number()),
    monthlyUsageLimitMinutes: core.serialization.property(
        "monthly_usage_limit_minutes",
        core.serialization.number().optional()
    ),
});

export declare namespace Usage {
    interface Raw {
        user_id: string;
        plan_type: serializers.PlanType.Raw;
        monthly_usage_minutes: number;
        monthly_usage_limit_minutes?: number | null;
    }
}
